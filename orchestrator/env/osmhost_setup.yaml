- hosts: "{{ target }}"
  tasks:
    - name: Check for btrfs /srv
      shell: |
        if [ -e /srv ]
        then
          srv_fs=$(df /srv -T | awk '/dev/ { print $2 }')
          if [ "$srv_fs" != 'btrfs' ]
          then
            echo "Requires btrfs /srv"
            exit -1
          fi
        else
          root_fs=$(df / -T | awk '/dev/ { print $2 }')
          if [ "$root_fs" != 'btrfs' ]
          then
            echo "Requires btrfs root or /srv"
            exit -1
          fi
          mkdir  -v -p -m 0755 -p /srv
        fi

    - name: Install required packages
      apt:
        name:
          - btrfs-progs
          - snapper
          - nginx
          - certbot
          - ansible
          - git
          - rsync
          - lxc
          - rsync
          - python3-lxc
        update_cache: yes

    - name: Clone OSM Ansible git repo.
      ansible.builtin.git:
        repo: https://git.devtank.co.uk/Devtank/osm-ansible.git
        dest: /srv/osm-lxc
        single_branch: yes
        version: dev_test_env

    - name: Apply OSM Host overlay.
      shell: rsync -a /srv/osm-lxc/root_overlay/ /

    - name: Create a OSM Host Base OS container
      community.general.lxc_container:
        name: base-os
        container_log: true
        template: debian
        state: stopped
        template_options: bookworm

    - name: OSM Host Base OS container prep
      shell: |
        [ -d /root/.ssh/id_rsa.pub ] | ssh-keygen -q  -t rsa -N '' -f /root/.ssh/id_rsa
        mkdir -p /var/lib/lxc/base-os/rootfs/root/.ssh
        cat /root/.ssh/id_rsa.pub >> /var/lib/lxc/base-os/rootfs/root/.ssh/authorized_keys
        echo '
        LXC_BRIDGE="lxcbr0"
        LXC_ADDR="10.0.3.1"
        LXC_NETMASK="255.255.255.0"
        LXC_NETWORK="10.0.3.0/24"
        LXC_DHCP_RANGE="10.0.3.2,10.0.3.254"
        LXC_DHCP_MAX="253"
        LXC_DHCP_CONFILE=/etc/lxc/dnsmasq.conf
        LXC_DOMAIN="lxc"' >> /etc/default/lxc-net
        mac_addr=$(awk -F ' = ' '/lxc.net.0.hwaddr/ {print $2}' /var/lib/lxc/base-os/config)
        echo "dhcp-host=$mac_addr,10.0.3.2" > /etc/lxc/dnsmasq.conf
        systemctl restart lxc-net

    - name: Start OSM Host Base OS container
      community.general.lxc_container:
        name: base-os
        state: started

    - name: Make OSM Host Base OS Ansible ready
      community.general.lxc_container:
        name: base-os
        container_command: apt install -y python3 wget

    - name: Ready host to use Ansible on OSM Host Base OS
      shell: |
        ssh-keyscan -H 10.0.3.2 > /root/.ssh/known_hosts
        echo 10.0.3.2 > /tmp/hosts

    - name: Run setup Ansible on OSM Host Base OS
      shell: |
        cd /srv/osm-lxc/ansible/
        ansible-playbook -e "target=10.0.3.2" -i /tmp/hosts base-os.yml

    - name: Stop OSM Host Base OS container
      community.general.lxc_container:
        name: base-os
        state: stopped

    - name: Use OSM Host Base OS container to create OSM Host OS Base
      shell: |
        mkdir -p /srv/osm-lxc/lxc/os-bases
        mv /var/lib/lxc/base-os/rootfs /srv/osm-lxc/lxc/os-bases/001-bookworm-$(date "+%d-%m-%Y")
        rm -rf /var/lib/lxc/base-os/config
