---

# These started as a loop, but ownership added complication.
- name: "Rollout application config file"
  template:
    src: "chirpstack-application-server.toml.j2"
    dest: "/etc/chirpstack-application-server/chirpstack-application-server.toml"
    owner: "appserver"
    group: "appserver"
    mode: "0640"

- name: "Rollout network config file"
  template:
    src: "chirpstack-network-server.toml.j2"
    dest: "/etc/chirpstack-network-server/chirpstack-network-server.toml"
    owner: "networkserver"
    group: "networkserver"
    mode: "0640"

- name: Start and enable chirpstack services
  systemd:
    name: chirpstack-{{ item }}-server
    state: restarted
    enabled: yes
  loop:
    - "application"
    - "network"

- name: "Create chirpstack admin password"
  ansible.builtin.set_fact:
    chirpstack_admin_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=16, chars=['ascii_letters', 'digits']) }}"

- name: "Get chirpstack jwt token"
  ansible.builtin.uri:
    url: http://localhost:8080/api/internal/login
    method: POST
    body: '{"email": "admin", "password": "admin"}'
    body_format: json
    headers:
      Content-Type: 'application/json'
      Accept: 'application/json'
    return_content: true
  register: chirp_api_token

- name: "Set chirpstack admin password"
  ansible.builtin.uri:
    url: http://localhost:8080/api/users/1/password
    method: PUT
    body: '{"password": "{{ chirpstack_admin_password }}", "userId": "1"}'
    body_format: json
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      Grpc-Metadata-Authorization: 'Bearer "{{ chirp_api_token.content.jwt }}"'
