---
- name: Print influx passwords
  debug:
    msg: "Influx password for {{ item.key }}: {{ item.value }}"
  loop: "{{ influx_passwords | dict2items }}"
  when: influx_passwords is defined and (influx_config_list.stdout_lines | length == 0 or overwrite_passwords)

- name: Print Influx token
  debug:
    msg: "InfluxDB Token: {{ influx_new_token }}"
  when: influx_new_token is defined

- name: Print postgres passwords
  debug:
    msg: "Postgres password for {{ item.key }}: {{ item.value }}"
  loop: "{{ postgres_passwords | dict2items }}"
  when: overwrite_passwords

- name: Print MQTT password
  debug:
    msg: "MQTT password for {{ customer_name }}: {{ mosquitto_passwd }}"

- name: Print Grafana passwords
  debug:
    msg: "Grafana admin for {{ customer_name }}: {{ grafana_admin_password }}\nGrafana viewer for {{ customer_name }}: {{ grafana_viewer_password }}"

- name: Copy files for encryption
  copy:
    src: '{{ item }}'
    dest: /tmp
  loop:
    - /srv/osm-lxc/utils/crypt.py

- name: Encrypt influx passwords
  shell: |
     /usr/bin/python3 /tmp/crypt.py -k '{{ priv_key }}' -e '{{ influx_passwords[item] }}'
  loop:
    - "chirpstack"
    - "customer"
    - "devtank"
    - "grafana"
  register: encrypted_influx_passwords

- name: Create new encrypted influx passwords
  set_fact:
    enc_influx_passwords: "{{ enc_influx_passwords | default({}) | combine ({ item.item : item.stdout }) }}"
  loop: "{{ encrypted_influx_passwords.results }}"

- name: Encrypt influx token
  shell: |
    /usr/bin/python3 crypt.py -k {{ priv_key }} -e {{ influx_new_token }}
  args:
    chdir: /tmp
  register: encrypted_influx_new_token

- name: Set encrypted influx token
  set_fact:
    enc_influx_new_token: "{{ encrypted_influx_new_token.stdout }}"

- name: Encrypt postgres_passwords
  shell: |
    /usr/bin/python3 crypt.py -k {{ priv_key }} -e {{ postgres_passwords[item] }}
  args:
    chdir: /tmp
  loop:
    - "chirpstack_as"
    - "chirpstack_ns"
  register: encrypted_postgres_passwords

- name: Create new encrypted postgres passwords
  set_fact:
    enc_postgres_passwords: "{{ enc_postgres_passwords | default({}) | combine ({ item.item : item.stdout }) }}"
  loop: "{{ encrypted_postgres_passwords.results }}"

- name: Encrypt mosquitto password
  shell: |
    /usr/bin/python3 crypt.py -k {{ priv_key }} -e {{ mosquitto_passwd }}
  args:
    chdir: /tmp
  register: encrypted_mosquitto_passwd

- name: Set encrypted mosquitto password
  set_fact:
    enc_mosquitto_passwd: "{{ encrypted_mosquitto_passwd.stdout }}"

- name: Encrypt grafana admin password
  shell: |
    /usr/bin/python3 crypt.py -k {{ priv_key }} -e {{ grafana_admin_password }}
  args:
    chdir: /tmp
  register: encrypted_grafana_admin_password

- name: Set encrypted grafana admin password
  set_fact:
    enc_grafana_admin_password: "{{ encrypted_grafana_admin_password.stdout }}"

- name: Encrypt grafana_viewer_password
  shell: |
    /usr/bin/python3 crypt.py -k {{ priv_key }} -e {{ grafana_viewer_password }}
  args:
    chdir: /tmp
  register: encrypted_grafana_viewer_password

- name: Set encrypted grafana viewer encrypted password
  set_fact:
    enc_grafana_viewer_password: "{{ encrypted_grafana_viewer_password.stdout }}"

- name: Write passwords to JSON file
  vars:
    json_pwds: |
      {
        "Influx": {{ influx_passwords | to_json }},
        "Influx Token": {{ influx_new_token | to_json }},
        "Postgres": {{ postgres_passwords | to_json }},
        "Mosquitto": {"{{ customer_name }}": {{ mosquitto_passwd | to_json }}},
        "Grafana Admin": {"admin": {{ grafana_admin_password | to_json }}},
        "Grafana Viewer": {"viewer": {{ grafana_viewer_password | to_json }}},
        "Chirpstack Admin": {"admin": {{ chirpstack_admin_password | to_json}}}
      }
  ansible.builtin.copy:
    content: "{{ json_pwds | to_nice_json }}"
    dest: "/root/passwords.json"

- name: Write encrypted passwords to JSON file
  vars:
    json_pwds: |
      {
        "Influx": {{ enc_influx_passwords | to_json }},
        "Influx Token": {{ enc_influx_new_token | to_json }},
        "Postgres": {{ enc_postgres_passwords | to_json }},
        "Mosquitto": {"{{ customer_name }}": {{ enc_mosquitto_passwd | to_json }}},
        "Grafana Admin": {"admin": {{ enc_grafana_admin_password | to_json }}},
        "Grafana Viewer": {"viewer": {{ enc_grafana_viewer_password | to_json }}}
      }
  ansible.builtin.copy:
    content: "{{ json_pwds | to_nice_json }}"
    dest: "/root/passwords-v2.json"
