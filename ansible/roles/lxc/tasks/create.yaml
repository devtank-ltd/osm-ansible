---

- name: "Get latest OS base"
  shell: "ls {{ lxc_root }}/os-bases | sort -n | tail -n1"
  register: latest_os_base

- name: "Ensure OS bases exist"
  fail:
    msg: "No OS bases are present!"
  when: "latest_os_base.stdout_lines | length == 0"

- name: "Set facts"
  set_fact:
    container_dir: "{{ lxc_root }}/containers/{{ container_hostname }}"

- name: "Get list of container IPs"
  shell: "cut -d, -f2 /etc/lxc/dnsmasq.conf | sort -n | tail -n1"
  register: last_container_ip

- name: "Set OS base fact"
  set_fact:
    os_base: "{{ latest_os_base.stdout }}"
  when: os_base is not defined

- name: "Set container IP fact"
  set_fact:
    container_ip_address: "{{ last_container_ip.stdout_lines[0] | default('10.0.3.1') | ipmath(1) }}"
  when: container_ip_address is not defined

- name: "Set container mac address fact"
  set_fact:
    container_hwaddr: "{{ '00:16:3e' | random_mac }}"
  when: container_hwaddr is not defined

- name: "Ensure container directory exists"
  file:
    path: "{{ lxc_root }}/containers"
    state: directory

- name: "Create a btrfs subvolume for the container root/config"
  command: "btrfs subvolume create {{ container_dir }}"
  args:
    creates: "{{ container_dir }}"

- name: "Create rootfs directory"
  file:
    path: "{{ container_dir }}/rootfs-layer"
    state: directory

- name: "Write container configuration file"
  template:
    src: "{{ lxc_root }}/templates/lxc.container.conf.j2"
    dest: "{{ container_dir }}/lxc.container.conf"

- name: "Add DHCP entry"
  lineinfile:
    path: "/etc/lxc/dnsmasq.conf"
    regexp: "^dhcp-host={{ container_hostname }}.+"
    line: "dhcp-host={{ container_hwaddr }},{{ container_ip_address }}"
    state: present

- name: "Add entry to /etc/hosts"
  lineinfile:
    path: "/etc/hosts"
    regexp: "^.+{{ container_hostname }}"
    line: "{{ container_ip_address }} {{ container_hostname }}"
    state: present

- name: "Restart lxc-net"
  systemd:
    name: "lxc-net.service"
    state: restarted
    enabled: yes

- name: "Start the LXC container"
  command: "lxc-start -n '{{ container_hostname }}' -f '{{ container_dir }}/lxc.container.conf'"

